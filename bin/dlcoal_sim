#!/usr/bin/env python
# DLCoal Simulation

# python imports
import sys
from os.path import dirname
import optparse

# import dlcoal library
try:
    import dlcoal
except ImportError:
    sys.path.append(dirname(dirname(sys.argv[0])))
    import dlcoal

# import rasmus, compbio libs
from rasmus import util,  treelib
from compbio import phylo

import dlcoal.sim

#=============================================================================
# options

o = optparse.OptionParser()
o.add_option("-o", "--outputdir", dest="outputdir",
             metavar="OUTPUT_DIR", default="simulations")
o.add_option("-s", "--stree", dest="stree", metavar="SPECIES_TREE")
o.add_option("-n", "--popsize", dest="popsize", metavar="POPULATION_SIZE",
             type="float")
o.add_option("-D", "--duprate", dest="duprate", metavar="DUPLICATION_RATE",
             type="float")
o.add_option("-L", "--lossrate", dest="lossrate", metavar="LOSS_RATE",
             type="float")
o.add_option("-g", "--gentime", dest="gentime", metavar="GENRATION_TIME",
             type="float")
o.add_option("-i", "--iter", dest="iter", metavar="NUMBER_OF_SIMULATION",
             type="int", default=1)
o.add_option("", "--minsize", dest="minsize", metavar="MIN_NUMBER_OF_LEAVES",
             type="int", default=0)


conf, args = o.parse_args()


#=============================================================================
# read inputs

stree = treelib.read_tree(conf.stree)
outdir = conf.outputdir

# convert species tree into generations
for node in stree:
    node.dist *= 1e6 / conf.gentime
duprate = conf.duprate / (1e6 / conf.gentime)
lossrate = conf.lossrate / (1e6 / conf.gentime)
times = treelib.get_tree_timestamps(stree)

#=============================================================================
# perform simulations

# NOTE: use 2*n for diploid species
dlcoal.sim.dlcoal_sims(
    outdir, conf.iter, stree, 2*conf.popsize, duprate, lossrate,
    minsize=conf.minsize)


